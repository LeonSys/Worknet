{"ast":null,"code":"import { async } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../_services/task.service\";\nimport * as i2 from \"../../_services/token-storage.service\";\nimport * as i3 from \"../../_services/user.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/router\";\n\nfunction TasksListComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵlistener(\"click\", function TasksListComponent_li_11_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const task_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.setActiveTask(task_r4, i_r5);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const task_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r5 == ctx_r0.currentIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r4.name, \" \");\n  }\n}\n\nfunction TasksListComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TasksListComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.removeAllTasks();\n    });\n    i0.ɵɵtext(1, \" Remove All \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TasksListComponent_div_14_a_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 15);\n    i0.ɵɵtext(1, \" Edit \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/tasks/\", ctx_r10.currentTask.id, \" \");\n  }\n}\n\nfunction TasksListComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h4\");\n    i0.ɵɵtext(2, \"Task\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵelementStart(4, \"label\");\n    i0.ɵɵelementStart(5, \"strong\");\n    i0.ɵɵtext(6, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵelementStart(9, \"label\");\n    i0.ɵɵelementStart(10, \"strong\");\n    i0.ɵɵtext(11, \"Description:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\");\n    i0.ɵɵelementStart(14, \"label\");\n    i0.ɵɵelementStart(15, \"strong\");\n    i0.ɵɵtext(16, \"Status:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\");\n    i0.ɵɵelementStart(19, \"label\");\n    i0.ɵɵelementStart(20, \"strong\");\n    i0.ɵɵtext(21, \"Priority:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\");\n    i0.ɵɵelementStart(24, \"label\");\n    i0.ɵɵelementStart(25, \"strong\");\n    i0.ɵɵtext(26, \"Assigned User:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"a\", 13);\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(29, TasksListComponent_div_14_a_29_Template, 2, 1, \"a\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentTask.name, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentTask.description, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentTask.status, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentTask.priority, \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.currentTask.assignedUser, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showAdminBoard);\n  }\n}\n\nfunction TasksListComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Please click on a Task...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class TasksListComponent {\n  constructor(taskService, tokenStorageService, userService) {\n    this.taskService = taskService;\n    this.tokenStorageService = tokenStorageService;\n    this.userService = userService;\n    this.roles = [];\n    this.isLoggedIn = false;\n    this.showAdminBoard = false;\n    this.showModeratorBoard = false;\n    this.currentTask = {};\n    this.currentIndex = -1;\n    this.name = '';\n  }\n\n  ngOnInit() {\n    this.retrieveTasks();\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      this.roles = user.roles;\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n      this.name = user.name;\n    }\n  }\n\n  navigateToTheUserPage(number) {\n    let users = this.userService.getAll();\n    let userToNavigate = this.currentTask.assignedUser(users$ | async);\n  }\n\n  retrieveTasks() {\n    this.taskService.getAll().subscribe(data => {\n      this.tasks = data;\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  refreshList() {\n    this.retrieveTasks();\n    this.currentTask = {};\n    this.currentIndex = -1;\n  }\n\n  setActiveTask(task, index) {\n    this.currentTask = task;\n    this.currentIndex = index;\n  }\n\n  removeAllTasks() {\n    this.taskService.deleteAll().subscribe(response => {\n      console.log(response);\n      this.refreshList();\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  searchName() {\n    this.currentTask = {};\n    this.currentIndex = -1;\n    this.taskService.findByName(this.name).subscribe(data => {\n      this.tasks = data;\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n}\n\nTasksListComponent.ɵfac = function TasksListComponent_Factory(t) {\n  return new (t || TasksListComponent)(i0.ɵɵdirectiveInject(i1.TaskService), i0.ɵɵdirectiveInject(i2.TokenStorageService), i0.ɵɵdirectiveInject(i3.UserService));\n};\n\nTasksListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TasksListComponent,\n  selectors: [[\"app-tasks-list\"]],\n  decls: 16,\n  vars: 5,\n  consts: [[1, \"list\", \"row\"], [1, \"col-md-8\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search by name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"m-3 btn btn-sm btn-danger\", 3, \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"list-group-item\", 3, \"click\"], [1, \"m-3\", \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [\"routerLink\", \"/userDescription\"], [\"class\", \"badge badge-warning\", 3, \"routerLink\", 4, \"ngIf\"], [1, \"badge\", \"badge-warning\", 3, \"routerLink\"]],\n  template: function TasksListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TasksListComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function TasksListComponent_Template_button_click_5_listener() {\n        return ctx.searchName();\n      });\n      i0.ɵɵtext(6, \" Search \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 6);\n      i0.ɵɵelementStart(8, \"h4\");\n      i0.ɵɵtext(9, \" Task list\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ul\", 7);\n      i0.ɵɵtemplate(11, TasksListComponent_li_11_Template, 2, 3, \"li\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, TasksListComponent_button_12_Template, 2, 0, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 6);\n      i0.ɵɵtemplate(14, TasksListComponent_div_14_Template, 30, 6, \"div\", 10);\n      i0.ɵɵtemplate(15, TasksListComponent_div_15_Template, 4, 0, \"div\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showModeratorBoard);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentTask.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.currentTask);\n    }\n  },\n  directives: [i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NgForOf, i5.NgIf, i6.RouterLinkWithHref],\n  styles: [\".list[_ngcontent-%COMP%] {\\r\\n  text-align: left;\\r\\n  max-width: 750px;\\r\\n  margin: auto;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2tzLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkIiwiZmlsZSI6InRhc2tzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0IHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIG1heC13aWR0aDogNzUwcHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"sources":["C:\\Szakdolgozat\\Program\\Worknet\\Angular-Frontend\\angularclient\\src\\app\\components\\tasks-list\\tasks-list.component.ts","C:\\Szakdolgozat\\Program\\Worknet\\Angular-Frontend\\angularclient\\src\\app\\components\\tasks-list\\tasks-list.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {Task} from \"../../models/task.model\";\r\nimport {TaskService} from \"../../_services/task.service\";\r\nimport {TokenStorageService} from \"../../_services/token-storage.service\";\r\nimport {UserService} from \"../../_services/user.service\";\r\nimport {async, Observable} from \"rxjs\";\r\nimport {User} from \"../../models/user.model\";\r\n\r\n@Component({\r\n  selector: 'app-tasks-list',\r\n  templateUrl: './tasks-list.component.html',\r\n  styleUrls: ['./tasks-list.component.css']\r\n})\r\nexport class TasksListComponent implements OnInit {\r\n  private roles: string[] = [];\r\n  isLoggedIn = false;\r\n  showAdminBoard = false;\r\n  showModeratorBoard = false;\r\n\r\n\r\n\r\n  tasks?: Task[];\r\n  currentTask: Task = {};\r\n  currentIndex = -1;\r\n  name = '';\r\n\r\n  constructor(private taskService: TaskService, private tokenStorageService: TokenStorageService, private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.retrieveTasks();\r\n\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n\r\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\r\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\r\n\r\n      this.name = user.name;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  navigateToTheUserPage(number: number): void {\r\n\r\n      let users = this.userService.getAll()\r\n      let userToNavigate = this.currentTask.assignedUser\r\n\r\n      (users$ | async)\r\n\r\n\r\n  }\r\n\r\n\r\n  retrieveTasks(): void {\r\n    this.taskService.getAll()\r\n      .subscribe(\r\n        data => {\r\n          this.tasks = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  refreshList(): void {\r\n    this.retrieveTasks();\r\n    this.currentTask = {};\r\n    this.currentIndex = -1;\r\n  }\r\n\r\n  setActiveTask(task: Task, index: number): void {\r\n    this.currentTask = task;\r\n    this.currentIndex = index;\r\n  }\r\n\r\n  removeAllTasks(): void {\r\n    this.taskService.deleteAll()\r\n      .subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.refreshList();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n  searchName(): void {\r\n    this.currentTask = {};\r\n    this.currentIndex = -1;\r\n\r\n    this.taskService.findByName(this.name)\r\n      .subscribe(\r\n        data => {\r\n          this.tasks = data;\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"list row\">\r\n  <div class=\"col-md-8\">\r\n    <div class=\"input-group mb-3\">\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        placeholder=\"Search by name\"\r\n        [(ngModel)]=\"name\"\r\n      />\r\n      <div class=\"input-group-append\">\r\n        <button\r\n          class=\"btn btn-outline-secondary\"\r\n          type=\"button\"\r\n          (click)=\"searchName()\"\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <h4> Task list</h4>\r\n    <ul class=\"list-group\">\r\n      <li\r\n        class=\"list-group-item\"\r\n        *ngFor=\"let task of tasks; let i = index\"\r\n        [class.active]=\"i == currentIndex\"\r\n        (click)=\"setActiveTask(task, i)\"\r\n      >\r\n        {{ task.name }}\r\n      </li>\r\n    </ul>\r\n\r\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllTasks()\" *ngIf=\"showModeratorBoard\">\r\n      Remove All\r\n    </button>\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n    <div *ngIf=\"currentTask.id\">\r\n      <h4>Task</h4>\r\n      <div>\r\n        <label><strong>Name:</strong></label> {{ currentTask.name }}\r\n      </div>\r\n      <div>\r\n        <label><strong>Description:</strong></label>\r\n        {{ currentTask.description }}\r\n      </div>\r\n      <div>\r\n        <label><strong>Status:</strong></label>\r\n        {{ currentTask.status }}\r\n      </div>\r\n      <div>\r\n        <label><strong>Priority:</strong></label>\r\n        {{ currentTask.priority }}\r\n      </div>\r\n      <div>\r\n        <label><strong>Assigned User:</strong></label>\r\n        <a  routerLink=\"/userDescription\" > {{ currentTask.assignedUser }} </a>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <a class=\"badge badge-warning\" routerLink=\"/tasks/{{ currentTask.id }} \" *ngIf=\"showAdminBoard\" >\r\n        Edit\r\n      </a>\r\n\r\n    </div>\r\n\r\n    <div *ngIf=\"!currentTask\">\r\n      <br />\r\n      <p>Please click on a Task...</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}