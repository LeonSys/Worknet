{"ast":null,"code":"import { HttpEventType, HttpResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/_services/file-upload.service\";\nimport * as i2 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    width: a0\n  };\n};\n\nfunction FileUploadComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵelementStart(1, \"div\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.progress + \"%\"));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r0.progress);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.progress, \"% \");\n  }\n}\n\nfunction FileUploadComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.message);\n  }\n}\n\nfunction FileUploadComponent_ul_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 14);\n    i0.ɵɵelementStart(1, \"li\", 15);\n    i0.ɵɵelementStart(2, \"a\", 16);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const file_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"href\", file_r3.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(file_r3.name);\n  }\n}\n\nexport class FileUploadComponent {\n  constructor(uploadService) {\n    this.uploadService = uploadService;\n    this.progress = 0;\n    this.message = '';\n  }\n\n  selectFile(event) {\n    this.selectedFiles = event.target.files;\n  }\n\n  upload() {\n    this.progress = 0;\n\n    if (this.selectedFiles) {\n      const file = this.selectedFiles.item(0);\n\n      if (file) {\n        this.currentFile = file;\n        this.uploadService.upload(this.currentFile).subscribe(event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.progress = Math.round(100 * event.loaded / event.total);\n          } else if (event instanceof HttpResponse) {\n            this.message = event.body.message;\n            this.fileInfos = this.uploadService.getFiles();\n          }\n        }, err => {\n          console.log(err);\n          this.progress = 0;\n\n          if (err.error && err.error.message) {\n            this.message = err.error.message;\n          } else {\n            this.message = 'Could not upload the file!';\n          }\n\n          this.currentFile = undefined;\n        });\n      }\n\n      this.selectedFiles = undefined;\n    }\n  }\n\n  ngOnInit() {\n    this.fileInfos = this.uploadService.getFiles();\n  }\n\n}\n\nFileUploadComponent.ɵfac = function FileUploadComponent_Factory(t) {\n  return new (t || FileUploadComponent)(i0.ɵɵdirectiveInject(i1.FileUploadService));\n};\n\nFileUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileUploadComponent,\n  selectors: [[\"app-file-upload\"]],\n  decls: 14,\n  vars: 6,\n  consts: [[1, \"row\"], [1, \"col-8\"], [1, \"btn\", \"btn-default\", \"p-0\"], [\"type\", \"file\", 3, \"change\"], [1, \"col-4\"], [1, \"btn\", \"btn-success\", \"btn-sm\", 3, \"disabled\", \"click\"], [\"class\", \"progress my-3\", 4, \"ngIf\"], [\"class\", \"alert alert-secondary\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"card\", \"mt-3\"], [1, \"card-header\"], [\"class\", \"list-group list-group-flush\", 4, \"ngFor\", \"ngForOf\"], [1, \"progress\", \"my-3\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-info\", \"progress-bar-striped\", 3, \"ngStyle\"], [\"role\", \"alert\", 1, \"alert\", \"alert-secondary\"], [1, \"list-group\", \"list-group-flush\"], [1, \"list-group-item\"], [3, \"href\"]],\n  template: function FileUploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"label\", 2);\n      i0.ɵɵelementStart(3, \"input\", 3);\n      i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_input_change_3_listener($event) {\n        return ctx.selectFile($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelementStart(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function FileUploadComponent_Template_button_click_5_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵtext(6, \" Upload \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, FileUploadComponent_div_7_Template, 3, 5, \"div\", 6);\n      i0.ɵɵtemplate(8, FileUploadComponent_div_8_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵtext(11, \"List of Files\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(12, FileUploadComponent_ul_12_Template, 4, 2, \"ul\", 10);\n      i0.ɵɵpipe(13, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", !ctx.selectedFiles);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.currentFile);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(13, 4, ctx.fileInfos));\n    }\n  },\n  directives: [i2.NgIf, i2.NgForOf, i2.NgStyle],\n  pipes: [i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmaWxlLXVwbG9hZC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"sources":["C:\\Szakdolgozat\\Program\\Worknet\\Angular-Frontend\\angularclient\\src\\app\\components\\file-upload\\file-upload.component.ts","C:\\Szakdolgozat\\Program\\Worknet\\Angular-Frontend\\angularclient\\src\\app\\components\\file-upload\\file-upload.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { FileUploadService } from 'src/app/_services/file-upload.service';\r\n\r\n@Component({\r\n  selector: 'app-file-upload',\r\n  templateUrl: './file-upload.component.html',\r\n  styleUrls: ['./file-upload.component.css']\r\n})\r\nexport class FileUploadComponent implements OnInit {\r\n\r\n  selectedFiles?: FileList;\r\n  currentFile?: File;\r\n  progress = 0;\r\n  message = '';\r\n\r\n  fileInfos?: Observable<any>;\r\n\r\n\r\n  constructor(private uploadService: FileUploadService) { }\r\n\r\n  selectFile(event: any): void {\r\n    this.selectedFiles = event.target.files;\r\n  }\r\n\r\n  upload(): void {\r\n    this.progress = 0;\r\n\r\n    if (this.selectedFiles) {\r\n      const file: File | null = this.selectedFiles.item(0);\r\n\r\n      if (file) {\r\n        this.currentFile = file;\r\n\r\n        this.uploadService.upload(this.currentFile).subscribe(\r\n          (event: any) => {\r\n            if (event.type === HttpEventType.UploadProgress) {\r\n              this.progress = Math.round(100 * event.loaded / event.total);\r\n            } else if (event instanceof HttpResponse) {\r\n              this.message = event.body.message;\r\n              this.fileInfos = this.uploadService.getFiles();\r\n            }\r\n          },\r\n          (err: any) => {\r\n            console.log(err);\r\n            this.progress = 0;\r\n\r\n            if (err.error && err.error.message) {\r\n              this.message = err.error.message;\r\n            } else {\r\n              this.message = 'Could not upload the file!';\r\n            }\r\n\r\n            this.currentFile = undefined;\r\n          });\r\n\r\n      }\r\n\r\n      this.selectedFiles = undefined;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fileInfos = this.uploadService.getFiles();\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-8\">\r\n    <label class=\"btn btn-default p-0\">\r\n      <input type=\"file\" (change)=\"selectFile($event)\" />\r\n    </label>\r\n  </div>\r\n\r\n  <div class=\"col-4\">\r\n    <button class=\"btn btn-success btn-sm\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\r\n      Upload\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"currentFile\" class=\"progress my-3\">\r\n  <div\r\n    class=\"progress-bar progress-bar-info progress-bar-striped\"\r\n    role=\"progressbar\"\r\n    attr.aria-valuenow=\"{{ progress }}\"\r\n    aria-valuemin=\"0\"\r\n    aria-valuemax=\"100\"\r\n    [ngStyle]=\"{ width: progress + '%' }\"\r\n  >\r\n    {{ progress }}%\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"message\" class=\"alert alert-secondary\" role=\"alert\">{{ message }}</div>\r\n\r\n<div class=\"card mt-3\">\r\n  <div class=\"card-header\">List of Files</div>\r\n  <ul\r\n    class=\"list-group list-group-flush\"\r\n    *ngFor=\"let file of fileInfos | async\"\r\n  >\r\n    <li class=\"list-group-item\">\r\n      <a href=\"{{ file.url }}\">{{ file.name }}</a>\r\n    </li>\r\n  </ul>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}